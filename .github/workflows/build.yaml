name: Kotlin CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test
        run: ./gradlew jvmTest -Ptesting.rpc.defaultUrl=$ORG_GRADLE_PROJECT_solanarpc -PexcludeIntegrationTests
        env:
          ORG_GRADLE_PROJECT_solanarpc: ${{ secrets.SOLANA_RPC_URL }}

      - name: Save Test Reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: '**/build/reports'

  publish:
    runs-on: macos-latest
    needs: build
    if: ${{ github.event_name == 'release' && startsWith(github.event.release.tag_name, 'v') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Publish to Maven Central
        run: ./gradlew clean publishAllPublicationsToMavenCentral --stacktrace -P version=${TAG:1}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAG: ${{ github.event.release.tag_name }}
      - name: Build XCFrameworks
        run: ./gradlew buildReleaseXCFramework --stacktrace -P version=${TAG:1}
        env:
          TAG: ${{ github.event.release.tag_name }}
      - name: Zip XCFramework files
        run: |
          cd XCFrameworkOutputs/
          zip -vr amount.xcframework.zip amount.xcframework/
          zip -vr base58.xcframework.zip base58.xcframework/
          zip -vr mplbubblegum.xcframework.zip mplbubblegum.xcframework/
          zip -vr solana.xcframework.zip solana.xcframework/
          zip -vr solanapublickeys.xcframework.zip solanapublickeys.xcframework/
          zip -vr solanaeddsa.xcframework.zip solanaeddsa.xcframework/
          zip -vr readapi.xcframework.zip readapi.xcframework/
          zip -vr rpc.xcframework.zip rpc.xcframework/
          zip -vr signer.xcframework.zip signer.xcframework/
          zip -vr mpltokenmetadata.xcframework.zip mpltokenmetadata.xcframework/
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            XCFrameworkOutputs/amount.xcframework.zip
            XCFrameworkOutputs/base58.xcframework.zip
            XCFrameworkOutputs/mplbubblegum.xcframework.zip
            XCFrameworkOutputs/solana.xcframework.zip
            XCFrameworkOutputs/solanapublickeys.xcframework.zip
            XCFrameworkOutputs/solanaeddsa.xcframework.zip
            XCFrameworkOutputs/readapi.xcframework.zip
            XCFrameworkOutputs/rpc.xcframework.zip
            XCFrameworkOutputs/signer.xcframework.zip
            XCFrameworkOutputs/mpltokenmetadata.xcframework.zip